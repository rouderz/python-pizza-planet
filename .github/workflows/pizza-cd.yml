name: PIZZA-PLANET-CD

on:
  push:
      branches: [ main ]
  pull_request:
      branches: [ main ]

jobs:
  cd:
    runs-on: ubuntu-latest
    env:
      WORKING_DIR: infrastructure/backend
      IMAGE_TAG: ${{ github.sha }}
      database: ${{ secrets.DATABASE }}
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"

      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r ./requirements.txt

      - name: run test
        run: |
          python manage.py test

      - name: deploy frontend
        run: aws s3 sync . s3://bucket-pizza-planet-frontend --delete
        working-directory: ui

      - name: Sops Binary Installer
        uses: mdgreenwald/mozilla-sops-action@v1

      - name: Configure GPG Key
        run: |
          echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --import
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image
        env:
          ECR_REGISTRY_STEP: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t pizza-planet-repository .
          docker tag pizza-planet-repository $ECR_REGISTRY_STEP/pizza-planet-repository:$IMAGE_TAG
          docker push $ECR_REGISTRY_STEP/pizza-planet-repository:$IMAGE_TAG

      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform Plan
        id: plan
        env:
          TF_VAR_pizza-planet-image: ${{ format('{0}/pizza-planet-repository:{1}', steps.login-ecr.outputs.registry, github.sha) }}
          TF_VAR_KEY: ${{ secrets.SOPS_KEY }}
        run: terraform plan -no-color
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform Apply
        id: apply
        env:
          TF_VAR_pizza-planet-image: ${{ format('{0}/pizza-planet-repository:{1}', steps.login-ecr.outputs.registry, github.sha) }}
          TF_VAR_KEY: ${{ secrets.SOPS_KEY }}
        run: terraform apply -auto-approve -input=false
        working-directory: ${{ env.WORKING_DIR }}
    
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_TITLE: Pizza planet Continues deployment"
          SLACK_USERNAME: "Rouderz"
          SLACK_CHANNEL: "pizza-planet-devops"
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fstatic.onecms.io%2Fwp-content%2Fuploads%2Fsites%2F19%2F2014%2F07%2F10%2Fpepperoni-pizza-ck-x.jpg&q=60?size=48


